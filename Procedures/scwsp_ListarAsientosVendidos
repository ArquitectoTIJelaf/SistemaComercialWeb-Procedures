Alter Procedure scwsp_ListarAsientosVendidos
@Codi_Programacion		Int,
@Nro_Viaje				Int
As
	-- Tabla Tb_AsientosBloqueados
	Declare @Codi_Sucursal			SmallInt
	Declare @Codi_Ruta				SmallInt
	Declare @Codi_Servicio			TinyInt
	Declare @Codi_Empresa			TinyInt
	Declare @Turno					Varchar(10)
	
	Select
		@Codi_Empresa = mp.Codi_Empresa,
		@Codi_Sucursal = rm.Codi_Sucursal,
		@Codi_Ruta = rm.CODI_DESTINO,
		@Codi_Servicio = rm.Codi_Servicio,
		@Turno = mp.HORA 
	From
		Tb_Maestro_Programacion mp
		Inner Join Tb_Ruta_Maestro rm on mp.NRO_RUTA=rm.NRO_RUTA
	Where
		mp.NRO_VIAJE=@Nro_Viaje

	Declare @Asientos				Varchar(100)
	Declare @Codi_OrigenP			SmallInt
	Declare @Codi_DestinoP			SmallInt

	Declare @NumeroBloque			Int
	Declare @CantBloques			Int
	Declare @Tabla					Table (Nume_Asiento Int, Codi_Origen SmallInt, Codi_Destino SmallInt)

	DECLARE AsientoBloqInfo CURSOR FOR 
		Select
			Asientos,cod_OrigenP,Cod_DestinoP
		From
			Tb_AsientosBloqueados 
		Where
			Cod_OrigenB=@Codi_Sucursal
			and Cod_DestinoB=@Codi_Ruta 
			and Cod_Servicio=@Codi_Servicio
			and cod_empresa=@Codi_Empresa
			and horario=@Turno
	OPEN AsientoBloqInfo
	FETCH NEXT FROM AsientoBloqInfo INTO @Asientos, @Codi_OrigenP, @Codi_DestinoP
	WHILE @@fetch_status = 0
	BEGIN
		Set @CantBloques = Len(@Asientos)
		Set @NumeroBloque = 1
		While (@NumeroBloque < @CantBloques)
			Begin
				Insert Into @Tabla(Nume_Asiento, Codi_Origen, Codi_Destino)
				Values(cast(SUBSTRING(@Asientos, @NumeroBloque, 2)as Int),@Codi_OrigenP, @Codi_DestinoP)
				Set @NumeroBloque = @NumeroBloque + 2
			End
		FETCH NEXT FROM AsientoBloqInfo INTO @Asientos, @Codi_OrigenP, @Codi_DestinoP
	END
	CLOSE AsientoBloqInfo
	DEALLOCATE AsientoBloqInfo

	If(@Codi_Programacion > 0)
	Begin
		-- Tabla Tb_AsientosBloqueados
		Select
			Nume_Asiento NUME_ASIENTO, '' Tipo_Documento, '' Numero_Documento, '' Ruc_Contacto,
			'' Fecha_Viaje, '' Fecha_Venta, '' Nacionalidad, 0 Precio_Venta, '' Recoge_En,
			'0' Color, 'AB' FLAG_VENTA, '' Sigla, Codi_Origen, Codi_Destino, '' Boleto,
			'' tipo, 0 id_venta, '' Nom_Origen, '' Nom_Destino,
			0 Codi_Punto_Venta, '' Nom_Punto_Venta, 0 Codi_Usuario, '' Nom_Usuario
		From
			@Tabla

		UNION

		-- Tabla VENTA
		Select
			v.NUME_ASIENTO, v.TIPO_DOC Tipo_Documento, v.DNI Numero_Documento, v.NIT_CLIENTE Ruc_Contacto,
			vd.Fecha_Viaje, v.FECH_VENTA Fecha_Venta, vd.Nacionalidad, v.PREC_VENTA Precio_Venta, v.RECO_VENTA Recoge_En,
			ISNULL(cd.Color, '0') Color, FLAG_VENTA, pv.Sigla, v.cod_origen Codi_Origen, v.CODI_SUBRUTA Codi_Destino, vd.NUME_BOLETO Boleto,
			v.tipo, v.id_venta, o.Descripcion Nom_Origen, d.Descripcion Nom_Destino,
			v.Punto_Venta Codi_Punto_Venta, pv.Descripcion Nom_Punto_Venta, v.CLAV_USUARIO Codi_Usuario, u.Login Nom_Usuario
		From
			VENTA v
			Inner Join VENTA_DERIVADA vd on v.id_venta = vd.id_venta
			Left Join Tb_Colores_Destino cd on v.CODI_SUBRUTA = cd.Codi_destino and vd.Servicio = cd.codi_Servicio
			Inner Join Tb_PuntoVenta pv on v.Punto_Venta = pv.Codi_puntoVenta
			Left Join Tb_Oficinas o on v.cod_origen = o.Codi_Sucursal
			Left Join Tb_Oficinas d on v.CODI_SUBRUTA = d.Codi_Sucursal
			Left Join Tb_Usuario u on v.CLAV_USUARIO = u.Codi_Usuario
		Where
			v.CODI_PROGRAMACION = @Codi_Programacion
			and v.INDI_ANULADO = 'F'
			and v.per_autoriza = '1'
			and v.FLAG_VENTA <> 'O'

		UNION

		-- Tabla VENTA (Bloqueados del Cliente/Servidor -> FLAG_VENTA = 'X')
		Select
			v.NUME_ASIENTO, '' Tipo_Documento, '' Numero_Documento, '' Ruc_Contacto,
			'' Fecha_Viaje, '' Fecha_Venta, '' Nacionalidad, 0 Precio_Venta, '' Recoge_En,
			'0' Color, FLAG_VENTA, '' Sigla, v.cod_origen Codi_Origen, v.CODI_SUBRUTA Codi_Destino, '' Boleto,
			'' tipo, 0 id_venta, '' Nom_Origen, '' Nom_Destino,
			0 Codi_Punto_Venta, '' Nom_Punto_Venta, 0 Codi_Usuario, '' Nom_Usuario
		From
			VENTA v
		Where
			v.CODI_PROGRAMACION = @Codi_Programacion
			and v.INDI_ANULADO = 'F'
			and v.per_autoriza = '1'
			and v.FLAG_VENTA = 'X'

		UNION
		
		-- Tabla Tb_Boleto_Ruta
		Select
			br.Nro_Asiento NUME_ASIENTO, '0' + cast(br.TD_Pasajero as Varchar) Tipo_Documento, br.ND_Pasajero Numero_Documento, br.Ruc_Pasajero Ruc_Contacto,
			br.Fecha_Viaje, br.Fecha_Venta, '' Nacionalidad, br.Total Precio_Venta, '' Recoge_En,
			ISNULL(cd.Color, '0') Color, 'B' FLAG_VENTA, pv.Sigla, br.Codi_Origen, br.Codi_Destino,
			CASE
				WHEN ISNUMERIC(SUBSTRING(br.Serie,1,1)) = 1
					THEN br.Serie + '-' + right('0000000' + cast(br.Numero as varchar), 7)
				ELSE
					SUBSTRING(br.Serie,2,4) + '-' + right('0000000' + cast(br.Numero as varchar), 7)
			END Boleto,
			Case Left(br.Serie,1) When 'B' Then 'B' When 'F' Then 'F' Else 'M' End tipo , 0 id_venta, o.Descripcion Nom_Origen, d.Descripcion Nom_Destino,
			br.Codi_PuntoVenta Codi_Punto_Venta, pv.Descripcion Nom_Punto_Venta, br.Codi_Boletero Codi_Usuario, u.Login Nom_Usuario
		From
			Tb_BoletoRuta br
			Inner Join Tb_Programacion p on br.Codi_Programacion = p.Codi_Programacion
			Left Join Tb_PuntoVenta pv on br.Codi_PuntoVenta = pv.Codi_puntoVenta
			Inner Join Tb_Colores_Destino cd on br.Codi_Destino = cd.Codi_destino and p.Codi_Servicio = cd.codi_Servicio
			Left Join Tb_Oficinas o on br.Codi_Origen = o.Codi_Sucursal
			Left Join Tb_Oficinas d on br.Codi_Destino = d.Codi_Sucursal
			Left Join Tb_Usuario u on br.Codi_Boletero = u.Codi_Usuario
		Where
			br.Codi_Programacion = @Codi_Programacion
			and br.Anulado= 'F'
	End;

	Else
	Begin
		-- Tabla Tb_AsientosBloqueados
		Select
			Nume_Asiento NUME_ASIENTO, '' Tipo_Documento, '' Numero_Documento, '' Ruc_Contacto,
			'' Fecha_Viaje, '' Fecha_Venta, '' Nacionalidad, 0 Precio_Venta, '' Recoge_En,
			'0' Color, 'AB' FLAG_VENTA, '' Sigla, Codi_Origen, Codi_Destino, '' Boleto,
			'' tipo, 0 id_venta, '' Nom_Origen, '' Nom_Destino,
			0 Codi_Punto_Venta, '' Nom_Punto_Venta, 0 Codi_Usuario, '' Nom_Usuario
		From
			@Tabla
	End;
